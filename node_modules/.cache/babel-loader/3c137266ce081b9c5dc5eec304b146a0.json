{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshay_upadhyay\\\\Documents\\\\GitHub\\\\DevOpsHackathon2\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios'; //function App() {\n//  return (\n//    <div className=\"App\">\n//      <header className=\"App-header\">\n//        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//        <p>\n//          Edit <code>src/App.js</code> and save to reload.\n//        </p>\n//        <a\n//          className=\"App-link\"\n//          href=\"https://reactjs.org\"\n//          target=\"_blank\"\n//          rel=\"noopener noreferrer\"\n//        >\n//          Learn React\n//        </a>\n//      </header>\n//    </div>\n//  );\n//}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Response: {\n        Items: [{\n          name: '',\n          biography: '',\n          id: '',\n          powers: []\n        }],\n        Count: '',\n        ScannedCount: ''\n      }\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  contructor() {}\n\n  componentDidMount() {\n    axios.get('/Heroes', {\n      responseType: 'json'\n    }).then(response => {\n      this.setState({\n        Response: response.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, Object.keys(this.state.Response.Items).map((k, i) => {\n      let data = this.state.Response.Items[k];\n      return React.createElement(\"tr\", {\n        key: k.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, k.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, data.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, data.biography), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, data.powers.map(i => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, i);\n      }))));\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\akshay_upadhyay\\Documents\\GitHub\\DevOpsHackathon2\\src\\App.js"],"names":["React","axios","App","Component","state","Response","Items","name","biography","id","powers","Count","ScannedCount","handleSubmit","e","preventDefault","response","fetch","method","headers","body","text","setState","responseToPost","contructor","componentDidMount","get","responseType","then","data","render","Object","keys","map","k","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport axios from 'axios';\r\n//function App() {\r\n//  return (\r\n//    <div className=\"App\">\r\n//      <header className=\"App-header\">\r\n//        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//        <p>\r\n//          Edit <code>src/App.js</code> and save to reload.\r\n//        </p>\r\n//        <a\r\n//          className=\"App-link\"\r\n//          href=\"https://reactjs.org\"\r\n//          target=\"_blank\"\r\n//          rel=\"noopener noreferrer\"\r\n//        >\r\n//          Learn React\r\n//        </a>\r\n//      </header>\r\n//    </div>\r\n//  );\r\n//}\r\nclass App extends React.Component{\r\n    state = {\r\n        Response: {\r\n            Items: [{\r\n                name: '',\r\n                biography: '',\r\n                id: '',\r\n                powers: []\r\n            }],\r\n            Count: '',\r\n            ScannedCount: ''\r\n        }\r\n    };\r\n    contructor() {\r\n        \r\n    }\r\n   \r\n    componentDidMount() {\r\n        axios.get('/Heroes', { responseType: 'json' }).then(response => { this.setState({ Response: response.data }); });\r\n    \r\n    }\r\n    \r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const response = await fetch('/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n            \r\n        });\r\n        const body = await response.text();\r\n        this.setState({ responseToPost: body });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <table striped >\r\n                    <thead>\r\n                        \r\n                     </thead>\r\n                    <tbody>\r\n                        {\r\n                            Object.keys(this.state.Response.Items).map((k, i) => {\r\n                            let data = this.state.Response.Items[k];\r\n                                return (\r\n                                    <tr key={k.id}>\r\n                                    <td>{k.id}</td>\r\n                                    <td>{data.name}</td>\r\n                                        <td>{data.biography}</td>\r\n                                        <td>\r\n                                            <ul>\r\n                                            {data.powers.map(i => {\r\n                                                return <li>{i}</li>})}\r\n                                            </ul>\r\n                                    </td>\r\n\r\n\r\n\r\n                                </tr>\r\n                                );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}